apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  generation: 1
  labels:
    k8s-app: kafka-service
  name: kafka-service
  selfLink: /apis/extensions/v1beta1/namespaces/haystack-apps/deployments/kafka-service
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kafka-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: kafka-service
    spec:
      containers:
      - env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-service:9092,PLAINTEXT_HOST://localhost:29092
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: PLAINTEXT
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        # - name: KAFKA_ADVERTISED_HOST_NAME
        #   value: 10.199.94.5
        # - name: KAFKA_ADVERTISED_PORT
        #   value: "9092"
        # - name: KAFKA_ZOOKEEPER_CONNECT
        #   value: zookeeper:2181
        # - name: KAFKA_CREATE_TOPICS
        #   value: proto-spans:1:1,metricpoints:1:1,mdm:1:1,span-buffer:1:1,graph-nodes:1:1,ewma-metrics:1:1,constant-metrics:1:1,pewma-metrics:1:1,anomalies:1:1,aa-metrics:1:1,mapped-metrics:1:1
        # - name: KAFKA_LOG_MESSAGE_TIMESTAMP_TYPE
        #   value: LogAppendTime
        # - name: KAFKA_HEAP_OPTS
        #   value: -Xmx512m -Xms512m
        image: confluentinc/cp-kafka:latest
        imagePullPolicy: IfNotPresent
        name: kafka-service
        ports:
        - containerPort: 9092
          protocol: TCP
        resources:
          limits:
            memory: 1224Mi
          requests:
            cpu: 100m
            memory: "1224"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
